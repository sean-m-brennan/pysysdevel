"""
Copyright 2013.  Los Alamos National Security, LLC.
This material was produced under U.S. Government contract
DE-AC52-06NA25396 for Los Alamos National Laboratory (LANL), which is
operated by Los Alamos National Security, LLC for the U.S. Department
of Energy. The U.S. Government has rights to use, reproduce, and
distribute this software.  NEITHER THE GOVERNMENT NOR LOS ALAMOS
NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR
ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is
modified to produce derivative works, such modified software should be
clearly marked, so as not to confuse it with the version available
from LANL.

Licensed under the Mozilla Public License, Version 2.0 (the
"License"); you may not use this file except in compliance with the
License. You may obtain a copy of the License at
http://www.mozilla.org/MPL/2.0/

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing
permissions and limitations under the License.
"""

"""
Generic Sphinx documentation file
"""

import sys, os, datetime
from config import pkg

build_dir   = '@@{BUILD_DIR}'  ## must be an absolute path


# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
for _, d in pkg.directories.items():
    sys.path.insert(0, os.path.join(build_dir, pkg.PACKAGE, d))
sys.path.insert(0, build_dir)

for t in pkg.doc_extra_tags:
    tags.add(t)

# -- General configuration -----------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinx.ext.autodoc', 'sphinx.ext.doctest',
              'sphinx.ext.viewcode', 'sphinx.ext.todo',
              'sphinx.ext.coverage'] + pkg.sphinx_extensions

# Non-standard (custom) extras
general_theme = pkg.PACKAGE
document_date = datetime.date.today().strftime('%d-%b-%Y')

# Logo images (Linked)
my_logo = os.path.join(pkg.image_dir, pkg.logo_file)
my_extra_logo = os.path.join(pkg.image_dir, pkg.extra_logo_file)

# Breathe (C++ code extension) details
breathe_default_project = pkg.NAME
breathe_projects = { pkg.NAME: os.path.abspath('xml') }

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8'

# The master toctree document.
master_doc = pkg.PACKAGE

# General information about the project.
project = pkg.NAME
copyright = pkg.COPYRIGHT

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = pkg.VERSION
# The full version, including alpha/beta/rc tags.
release = pkg.RELEASE

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
today_fmt = '%B %d, %Y'

# List of glob-style patterns that should be excluded when looking
# for source files.
exclude_patterns = pkg.doc_excludes + pkg.doc_exclude_trees

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []



# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  Major themes that come with
# Sphinx are currently 'default' and 'sphinxdoc'.
html_theme = general_theme

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    'doc_proj': pkg.document_project,
    'doc_hier': pkg.document_hierarchy,
    'doc_type': pkg.document_type,
    'doc_num':  pkg.document_id,
    'doc_iss':  pkg.RELEASE,
    'doc_date': document_date,

    'custom_logo': my_logo,
    'custom_logo_ref': 'http://int.xaps.lanl.gov',
    'extra_logo': my_extra_logo,
    'extra_logo_ref': 'http://www.lanl.gov',
    }

# Add any paths that contain custom themes here, relative to this directory.
html_theme_path = ['.']

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = pkg.NAME + ' manual'

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = os.path.join('..', pkg.logo)

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large. (Copied)
html_favicon = os.path.join(pkg.image_path, pkg.PACKAGE + '.ico')
#html_favicon = os.path.join(rel_src_dir, pkg.image_path, pkg.PACKAGE + '.ico')

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_use_modindex = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = False

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# If nonempty, this is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = ''

# Output file base name for HTML help builder.
htmlhelp_basename = pkg.PACKAGE + 'doc'



# -- Options for MAN pages output ----------------------------------------------

man_pages = [
  (master_doc, pkg.PACKAGE, pkg.NAME + ' manual', pkg.AUTHOR, 'manual'),
]



# -- Options for RST2PDF output ------------------------------------------------

# List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
pdf_documents = [
  (master_doc, pkg.PACKAGE, pkg.NAME + ' manual', pkg.AUTHOR, 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
pdf_logo = os.path.join(pkg.image_path, pkg.logo)
#pdf_logo = os.path.join(rel_src_dir, pkg.image_path, pkg.logo)

pdf_stylesheets = ['sphinx']
#pdf_stylesheets = ['agogo']

#pdf_compressed = False

#pdf_font_path = []

#pdf_language = 'en_US'

#pdf_fit_mode = ''

#pdf_break_level = 0

#pdf_inline_footnotes = True

#pdf_verbosity = 0

# If false, no index is generated.
#pdf_use_index = True

# If false, no module index is generated.
#pdf_use_modindex = False

#pdf_use_coverpage = True

# Documents to append as an appendix to all manuals.
#pdf_appendices = []

#pdf_splittables = False

#pdf_breakside = 'odd'

#pdf_default_dpi = 300




# -- Options for LaTeX output --------------------------------------------------

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  (master_doc, pkg.PACKAGE + '.tex', pkg.NAME + ' manual',
   pkg.AUTHOR, general_theme),
]

# The paper size ('letter' or 'a4').
#latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
#latex_font_size = '10pt'

# The name of an image file (relative to this directory) to place at the top of
# the title page.
latex_logo = os.path.join(pkg.image_path, pkg.logo)
#latex_logo = os.path.join(rel_src_dir, pkg.image_path, pkg.logo)

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# LaTeX snippets that override those Sphinx usually puts into the generated .tex files.
latex_elements = {
    'preamble': '\n' +
                '\\def\\docproj{' + pkg.document_project   + '}\n' +
                '\\def\\dochier{' + pkg.document_hierarchy + '}\n' +
                '\\def\\doctype{' + pkg.document_type      + '}\n' +
                '\\def\\docnum{'  + pkg.document_id        + '}\n' +
                '\\def\\dociss{'  + pkg.RELEASE            + '}\n' +
                '\\def\\docdate{' + document_date          + '}\n' +
                '\\def\\doclogo{' + my_logo                + '}\n' +
                '\\def\\docxtralogo{' + my_extra_logo      + '}\n',
    }


# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
latex_use_modindex = True
